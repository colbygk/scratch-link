version: 2.1
workflows:
  macos:
    jobs:
      - build_for_mac
  windows:
    jobs:
      - build_for_windows:
          context: code-sign-generic
orbs:
  windows: circleci/windows@2.2.0
aliases:
  - &should_sign
    or:
      - equal: [ develop, << pipeline.git.branch >> ]
      - equal: [ main, << pipeline.git.branch >> ]
      - equal: [ master, << pipeline.git.branch >> ]
jobs:
  build_for_mac:
    macos:
      xcode: "11.3.1"
    steps:
      - checkout
      - when:
          condition:
            *should_sign
          steps:
              - run:
                  name: Write real certificate files
                  working_directory: ./Certificates
                  command: ./import-certificates.sh
      - unless:
          condition:
            *should_sign
          steps:
              - run:
                  name: Generate mock certificates
                  working_directory: ./Certificates
                  command: ./mock-certificates.sh
      - run:
          name: Convert certificates
          working_directory: ./Certificates
          command: ./convert-certificates.sh
      - run:
          name: Install Homebrew packages
          command: brew install pngcrush
      - restore_cache:
          key: spm-cache-{{ checksum "macOS/Package.resolved" }}
      - run:
          name: Build the application
          command: make --directory=macOS zip
      - save_cache:
          key: spm-cache-{{ checksum "macOS/Package.resolved" }}
          paths:
            - macOS/.build/repositories
            - macOS/.build/checkouts
      - store_artifacts:
          path: macOS/dist/scratch-link-*.zip
      - when:
          condition:
            *should_sign
          steps:
              - run:
                  name: Sign the application
                  command: make --directory=macOS dist
              - store_artifacts:
                  path: macOS/dist/scratch-link-*.pkg
              - store_artifacts:
                  path: macOS/dist/mas-scratch-link-*.pkg
  build_for_windows:
    executor: windows/default
    steps:
      - checkout
      - restore_cache:
          keys:
            - nuget-cache-{{ checksum "Windows/scratch-link/packages.config" }}-{{ checksum "Windows/ScratchLinkSetup/packages.config" }}
      - run:
          name: Install dependencies using NuGet
          command: nuget restore Windows/
      - save_cache:
          paths:
            - Windows/packages/
          key: nuget-cache-{{ checksum "Windows/scratch-link/packages.config" }}-{{ checksum "Windows/ScratchLinkSetup/packages.config" }}
      - when:
          condition:
            *should_sign
          steps:
            - run:
                name: Import code-signing certificate
                command: ./Windows/Import-WIN_CSC.ps1
      - run:
          name: Build using MSBuild
          command: msbuild Windows/scratch-link.sln -m -p:Configuration=Release -p:Platform="Any CPU"
      - run:
          name: Move build products to artifacts directory
          command: |
            New-Item -Path Windows/ -Name Artifacts -ItemType directory
            Move-Item -Path Windows/ScratchLinkAPPX/AppPackages/ScratchLinkAPPX_*_AnyCPU_bundle.appxupload -Destination Windows/Artifacts/
            Move-Item -Path Windows/ScratchLinkSetup/bin/Release/ScratchLinkSetup-*.zip -Destination Windows/Artifacts/
      - store_artifacts:
          path: Windows/Artifacts/
