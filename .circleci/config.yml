version: 2.1
workflows:
  macos:
    jobs:
      - build_for_mac:
          context: scratch-desktop-and-link
  windows:
    jobs:
      - build_for_windows:
          context: scratch-desktop-and-link
orbs:
  windows: circleci/windows@2.2.0
aliases:
  - &should_sign
    or:
      - equal: [ develop, << pipeline.git.branch >> ]
      - equal: [ main, << pipeline.git.branch >> ]
      - equal: [ master, << pipeline.git.branch >> ]
jobs:
  build_for_mac:
    macos:
      xcode: "11.3.1"
    steps:
      - checkout
      - when:
          condition:
            *should_sign
          steps:
              - run:
                  name: Import from CI context
                  working_directory: ./Certificates
                  command: ./import-certificates.sh
              - run:
                  name: Set up code-signing keychain
                  # DO NOT RUN THIS on your own computer unless you really know what you're doing!
                  command: |
                    security -v create-keychain -p circleci circleci.keychain
                    security -v default-keychain -s circleci.keychain
                    security -v import Certificates/code-to-learn-macos.p12 -k circleci.keychain -P "" -T /usr/bin/codesign -T /usr/bin/productbuild
                    security -v unlock-keychain -p circleci circleci.keychain
                    # "set-key-partition-list" prints extensive not-so-useful output and adding "-q" (even multiple times) doesn't suppress it.
                    # The "grep -v" at the end of this line suppresses all of that so any errors or warnings might be more visible.
                    security -v set-key-partition-list -S apple-tool:,apple:,codesign: -s -k circleci circleci.keychain | grep -v '^    0x'
                    security -v set-keychain-settings -lut 600 circleci.keychain
                    security -v find-identity circleci.keychain
                    rm Certificates/code-to-learn-macos.p12
      - unless:
          condition:
            *should_sign
          steps:
              - run:
                  name: Generate mock SSL certificates
                  working_directory: ./Certificates
                  command: ./mock-certificates.sh
      - run:
          name: Convert SSL certificates
          working_directory: ./Certificates
          command: ./convert-certificates.sh
      - restore_cache:
          name: Restore Homebrew cache
          key: homebrew-cache-v2
      - run:
          name: Install Homebrew packages
          command: brew install pngcrush
      - save_cache:
          name: Save Homebrew cache
          paths:
            - ~/Library/Caches/Homebrew
            - /usr/local/Homebrew
          key: homebrew-cache-v2
      - restore_cache:
          name: Restore Swift dependency cache
          key: spm-cache-v2-{{ checksum "macOS/Package.resolved" }}
      - run:
          name: Resolve Swift dependencies
          command: make --directory=macOS resolve-dependencies
      - save_cache:
          name: Save Swift dependency cache
          key: spm-cache-v2-{{ checksum "macOS/Package.resolved" }}
          paths:
            - macOS/.build
      - run:
          name: Check git status
          command: git status
      - run:
          name: Build the application
          command: make --directory=macOS zip
      - run:
          name: Move ZIP to Artifacts directory
          command: |
            mkdir -p macOS/Artifacts/
            mv -v macOS/dist/scratch-link-*.zip macOS/Artifacts/
      - when:
          condition:
            *should_sign
          steps:
              - run:
                  name: Sign the application
                  command: make --directory=macOS dist
              - run:
                  name: Move signed build products to Artifacts directory
                  command: |
                    mkdir -p macOS/Artifacts/
                    mv -v macOS/dist/{scratch-link,mas-scratch-link}-*.pkg macOS/Artifacts/
      - store_artifacts:
          path: macOS/Artifacts/
  build_for_windows:
    executor: windows/default
    steps:
      - checkout
      - when:
          condition:
            *should_sign
          steps:
            - run:
                name: Import code-signing certificate
                command: ./Windows/Import-WIN_CSC.ps1
      - restore_cache:
          keys:
            - nuget-cache-{{ checksum "Windows/scratch-link/packages.config" }}-{{ checksum "Windows/ScratchLinkSetup/packages.config" }}
      - run:
          name: Install dependencies using NuGet
          command: nuget restore Windows/
      - save_cache:
          paths:
            - Windows/packages/
          key: nuget-cache-{{ checksum "Windows/scratch-link/packages.config" }}-{{ checksum "Windows/ScratchLinkSetup/packages.config" }}
      - when:
          condition:
            *should_sign
          steps:
            - run:
                name: Build and sign
                command: msbuild Windows/scratch-link.sln -p:Configuration=Release -p:Platform="Any CPU" -p:SignedBuild=true
                environment: # WiX fails with ICE errors if the environment is too big
                  CSC_MACOS: ""
                  SDM_CERT: ""
                  SDM_CERT_CA: ""
                  SDM_CERT_INT: ""
                  SDM_CERT_KEY: ""
      - unless:
          condition:
            *should_sign
          steps:
            - run:
                name: Build without signing
                command: msbuild Windows/scratch-link.sln -p:Configuration=Release -p:Platform="Any CPU" -p:SignedBuild=false
                environment: # WiX fails with ICE errors if the environment is too big
                  CSC_MACOS: ""
                  SDM_CERT: ""
                  SDM_CERT_CA: ""
                  SDM_CERT_INT: ""
                  SDM_CERT_KEY: ""
      - run:
          name: Move build products to artifacts directory
          command: |
            New-Item -Path Windows/ -Name Artifacts -ItemType directory
            Move-Item -Path Windows/ScratchLinkAPPX/AppPackages/ScratchLinkAPPX_*_AnyCPU_bundle.appxupload -Destination Windows/Artifacts/
            Move-Item -Path Windows/ScratchLinkSetup/bin/Release/ScratchLinkSetup-*.zip -Destination Windows/Artifacts/
      - store_artifacts:
          path: Windows/Artifacts/
